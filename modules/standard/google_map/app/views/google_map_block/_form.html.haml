= f.label(:title)
= f.text_field(:title)

= f.label(:width)
= f.text_field(:width)

= f.label(:height)
= f.text_field(:height)

- div_id = "google_map#{block.id}"
%br
%div{:id => div_id, :class => 'no_resize_images', :style => "width:#{block.width}; height:#{block.height}"}
%br

%fieldset
  %legend= t('google_map.marker')

  %input{:type => 'button', :id => 'marker_add', :value => t('google_map.add')}

  = label_tag('title', t('common.title'))
  = text_field_tag('title')

  = label_tag('html', 'HTML')
  = text_area_tag('html', '', :rows => 5, :class => 'mce_no_editor')

  %input{:type => 'button', :id => 'marker_save', :value => t('common.save')}
  %input{:type => 'button', :id => 'marker_delete', :value => t('common.delete')}

- block.markers.each do |m|
  = hidden_field_tag("google_map_block[markers][#{m.id}][title]", m.title)
  = hidden_field_tag("google_map_block[markers][#{m.id}][latitude]", m.latitude)
  = hidden_field_tag("google_map_block[markers][#{m.id}][longitude]", m.longitude)
  = hidden_field_tag("google_map_block[markers][#{m.id}][html]", m.html)

%script{:src => "http://maps.google.com/maps?file=api&amp;v=2&amp;key=#{GoogleMapConf.instance.key}", :type => 'text/javascript'}

:erb
  <script type='text/javascript'>
    //<![CDATA[
      var activeMarker = null;

      function data(type) {
        return $("input[name='google_map_block[markers][" + activeMarker.id + "][" + type + "]']");
      }

      function editor(type) {
        if (type == 'html') {
          return $("textarea[name='html']");
        } else {
          return $("input[name='" + type + "']");
        }
      }

      $.each(['title', 'html'], function(i, type) {
        editor(type).change(function() {
          if (activeMarker != null) {
            var value = editor(type).attr('value');
            data(type).attr('value', value);
            console.debug(value)
          }
        });
      });

      if (GBrowserIsCompatible()) {
        var <%= div_id %> = new GMap2(document.getElementById('<%= div_id %>'));

        var center = new GLatLng(<%= block.center[:latitude] %>, <%= block.center[:longitude] %>);

        var sw = new GLatLng(<%= block.sw_ne[:sw][:s] %>, <%= block.sw_ne[:sw][:w] %>);
        var ne = new GLatLng(<%= block.sw_ne[:ne][:n] %>, <%= block.sw_ne[:ne][:e] %>);
        var bounds = new GLatLngBounds(sw, ne);
        var zoomLevel = <%= div_id %>.getBoundsZoomLevel(bounds) - 1;

        <%= div_id %>.setCenter(center, zoomLevel);
        <%= div_id %>.addControl(new GLargeMapControl());
        <%= div_id %>.addControl(new GMapTypeControl());

        var marker;
        - block.markers.each do |m|
          marker = new GMarker(new GLatLng(<%= m.latitude %>, <%= m.longitude %>), {title: '<%= h(m.title) %>', draggable: true});
          marker.id = <%= m.id %>;

        GEvent.addListener(marker, 'mousedown', function() {
          activeMarker = this;

          var id = this.id;
          $.each(['title', 'html'], function(i, type) {
            var value = data(type).attr('value');
            editor(type).attr('value', value);
          });
        });

        // mousedown is called before drag
        GEvent.addListener(marker, 'drag', function(latlng) {
          data('latitude').attr('value', latlng.lat());
          data('longitude').attr('value', latlng.lng());
        });

        <%= div_id %>.addOverlay(marker);
      }
    //]]>
  </script>
